import java.util.Arrays;

/** 
Solution to a problem from LeetCode.com that states the following,
"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order."
*/

public class two_sum {
    public static void main(String[] args) {
        int[] list = {1,2,3,4};
        int target = 5;
        System.out.println(Arrays.toString((twoSum(list, target))));
    }

//solution below. It iterates through the array until it matches the target. This solution has a time complexity of O(n^2).

    public static int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++)
                if (nums[i] + nums[j] == target) {
                    return new int[] { i, j }; // it should output [0,3]
                }
        }
        throw new IllegalArgumentException("No Solution");
    }
}
